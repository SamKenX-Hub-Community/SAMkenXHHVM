/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package thrift.test;

import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.annotation.concurrent.Immutable;
import javax.annotation.Nullable;
import com.facebook.hyperthrift.HyperThriftBase;
import com.facebook.hyperthrift.reflect.HyperThriftType;

@Immutable
@HyperThriftType
public class LargeDeltas extends HyperThriftBase {
  public static final String TYPE_NAME = "thrift.test.LargeDeltas";


  @Nullable
  public thrift.test.Bools b1() {
    return getFieldValue(0);
  }

  @Nullable
  public thrift.test.Bools b10() {
    return getFieldValue(1);
  }

  @Nullable
  public thrift.test.Bools b100() {
    return getFieldValue(2);
  }

  @Nullable
  public boolean check_true() {
    return getFieldValue(3);
  }

  @Nullable
  public thrift.test.Bools b1000() {
    return getFieldValue(4);
  }

  @Nullable
  public boolean check_false() {
    return getFieldValue(5);
  }

  @Nullable
  public thrift.test.VersioningTestV2 vertwo2000() {
    return getFieldValue(6);
  }

  @Nullable
  public Set<String> a_set2500() {
    return getFieldValue(7);
  }

  @Nullable
  public thrift.test.VersioningTestV2 vertwo3000() {
    return getFieldValue(8);
  }

  @Nullable
  public List<Integer> big_numbers() {
    return getFieldValue(9);
  }



  public static class Builder extends HyperThriftBase.Builder {
    public Builder() {
      super(10);
    }

    public Builder(LargeDeltas other) {
      super(other);
    }

    @Nullable
    public thrift.test.Bools b1() {
      return getFieldValue(0);
    }

    public Builder LargeDeltas( thrift.test.Bools value) {
      setFieldValue(0, value);
      return this;
    }

    @Nullable
    public thrift.test.Bools b10() {
      return getFieldValue(1);
    }

    public Builder LargeDeltas( thrift.test.Bools value) {
      setFieldValue(1, value);
      return this;
    }

    @Nullable
    public thrift.test.Bools b100() {
      return getFieldValue(2);
    }

    public Builder LargeDeltas( thrift.test.Bools value) {
      setFieldValue(2, value);
      return this;
    }

    @Nullable
    public boolean check_true() {
      return getFieldValue(3);
    }

    public Builder LargeDeltas( boolean value) {
      setFieldValue(3, value);
      return this;
    }

    @Nullable
    public thrift.test.Bools b1000() {
      return getFieldValue(4);
    }

    public Builder LargeDeltas( thrift.test.Bools value) {
      setFieldValue(4, value);
      return this;
    }

    @Nullable
    public boolean check_false() {
      return getFieldValue(5);
    }

    public Builder LargeDeltas( boolean value) {
      setFieldValue(5, value);
      return this;
    }

    @Nullable
    public thrift.test.VersioningTestV2 vertwo2000() {
      return getFieldValue(6);
    }

    public Builder LargeDeltas( thrift.test.VersioningTestV2 value) {
      setFieldValue(6, value);
      return this;
    }

    @Nullable
    public Set<String> a_set2500() {
      return getFieldValue(7);
    }

    public Builder LargeDeltas( Set<String> value) {
      setFieldValue(7, value);
      return this;
    }

    @Nullable
    public thrift.test.VersioningTestV2 vertwo3000() {
      return getFieldValue(8);
    }

    public Builder LargeDeltas( thrift.test.VersioningTestV2 value) {
      setFieldValue(8, value);
      return this;
    }

    @Nullable
    public List<Integer> big_numbers() {
      return getFieldValue(9);
    }

    public Builder LargeDeltas( List<Integer> value) {
      setFieldValue(9, value);
      return this;
    }

    public LargeDeltas build() {
      Object[] fields = markBuilt();
      LargeDeltas instance = new LargeDeltas();
      instance.init(TYPE_NAME, fields);
      return instance;
    }
  }
}
